{"ast":null,"code":"var _jsxFileName = \"/media/rajkjain/Fdrive/IIIT_SEM_FIRST/SSD/midlab/VidyaVichar-Classroom-Q-A-sticky-board/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QuestionForm from \"./components/QuestionForm\";\nimport QuestionCard from \"./components/QuestionCard\";\nimport FilterControls from \"./components/FilterControls\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000/api/questions\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const fetchQuestions = async () => {\n    try {\n      const response = await axios.get(`${API_URL}?status=${filter}`);\n      setQuestions(response.data);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchQuestions();\n    // Set up polling to refresh questions every 5 seconds\n    const interval = setInterval(fetchQuestions, 5000);\n    return () => clearInterval(interval);\n  }, [filter]);\n  const handleQuestionSubmit = async questionData => {\n    try {\n      await axios.post(API_URL, questionData);\n      fetchQuestions(); // Refresh immediately after posting\n    } catch (error) {\n      console.error(\"Error submitting question:\", error.response.data.message);\n      alert(`Error: ${error.response.data.message}`);\n    }\n  };\n  const handleStatusChange = async (id, status) => {\n    try {\n      await axios.patch(`${API_URL}/${id}`, {\n        status\n      });\n      fetchQuestions(); // Refresh immediately after status change\n    } catch (error) {\n      console.error(\"Error updating status:\", error);\n    }\n  };\n  const handleClearAll = async () => {\n    if (window.confirm(\"Are you sure you want to clear all questions?\")) {\n      try {\n        await axios.delete(`${API_URL}/clear`);\n        fetchQuestions(); // Refresh immediately after clearing\n      } catch (error) {\n        console.error(\"Error clearing questions:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"VidyaVichar - Classroom Q&A Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-container\",\n        children: [/*#__PURE__*/_jsxDEV(QuestionForm, {\n          onQuestionSubmit: handleQuestionSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterControls, {\n          setFilter: setFilter,\n          onClear: handleClearAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-board\",\n        children: questions.map(q => /*#__PURE__*/_jsxDEV(QuestionCard, {\n          question: q,\n          onStatusChange: handleStatusChange\n        }, q._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dAV5reGfV4wG8riqZdLMxENuoB4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","QuestionForm","QuestionCard","FilterControls","jsxDEV","_jsxDEV","API_URL","App","_s","questions","setQuestions","filter","setFilter","fetchQuestions","response","get","data","error","console","interval","setInterval","clearInterval","handleQuestionSubmit","questionData","post","message","alert","handleStatusChange","id","status","patch","handleClearAll","window","confirm","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onQuestionSubmit","onClear","map","q","question","onStatusChange","_id","_c","$RefreshReg$"],"sources":["/media/rajkjain/Fdrive/IIIT_SEM_FIRST/SSD/midlab/VidyaVichar-Classroom-Q-A-sticky-board/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QuestionForm from \"./components/QuestionForm\";\nimport QuestionCard from \"./components/QuestionCard\";\nimport FilterControls from \"./components/FilterControls\";\nimport \"./App.css\";\n\nconst API_URL = \"http://localhost:5000/api/questions\";\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  const fetchQuestions = async () => {\n    try {\n      const response = await axios.get(`${API_URL}?status=${filter}`);\n      setQuestions(response.data);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchQuestions();\n    // Set up polling to refresh questions every 5 seconds\n    const interval = setInterval(fetchQuestions, 5000);\n    return () => clearInterval(interval);\n  }, [filter]);\n\n  const handleQuestionSubmit = async (questionData) => {\n    try {\n      await axios.post(API_URL, questionData);\n      fetchQuestions(); // Refresh immediately after posting\n    } catch (error) {\n      console.error(\"Error submitting question:\", error.response.data.message);\n      alert(`Error: ${error.response.data.message}`);\n    }\n  };\n\n  const handleStatusChange = async (id, status) => {\n    try {\n      await axios.patch(`${API_URL}/${id}`, { status });\n      fetchQuestions(); // Refresh immediately after status change\n    } catch (error) {\n      console.error(\"Error updating status:\", error);\n    }\n  };\n\n  const handleClearAll = async () => {\n    if (window.confirm(\"Are you sure you want to clear all questions?\")) {\n      try {\n        await axios.delete(`${API_URL}/clear`);\n        fetchQuestions(); // Refresh immediately after clearing\n      } catch (error) {\n        console.error(\"Error clearing questions:\", error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>VidyaVichar - Classroom Q&A Board</h1>\n      </header>\n      <main>\n        <div className=\"controls-container\">\n          <QuestionForm onQuestionSubmit={handleQuestionSubmit} />\n          <FilterControls setFilter={setFilter} onClear={handleClearAll} />\n        </div>\n        <div className=\"question-board\">\n          {questions.map((q) => (\n            <QuestionCard key={q._id} question={q} onStatusChange={handleStatusChange} />\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}